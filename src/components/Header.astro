---
import Logo from "./Logo.astro";

---

<header id="landing-header" class="py-3  px-10 flex items-center fixed top-0 w-full justify-between z-40 text-white ">


    <div class="flex flex-grow basis-0">
    <Logo />
    </div> 
    <nav>
        <ul class="flex text-sm [&>li>a]:transition-colors [&>li>a]:duration-500 [&>li>a]:text-curent [&>li>a]:font-medium [&>li>a]:inline-block [&>li>a]:px-4 [&>li>a]:py-2 ">
            <li><a href="#">Model S</a></li>
            <li><a href="#">Model 3</a></li>
            <li><a href="#">Model X</a></li>
            <li><a href="#">Model Y</a></li>
            <li><a href="#">Powerwall</a></li>
            <li><a href="#">Carga</a></li>
        </ul>

    </nav>


    <nav class="flex flex-grow justify-end basis-0">
        <ul class="flex text-sm [&>li>a]:transition-colors [&>li>a]:duration-500 [&>li>a]:text-current [&>li>a]:font-medium [&>li>a]:inline-block [&>li>a]:px-4 [&>li>a]:py-2">
            <li><a href="#">Soporte</a></li>
            <li><a href="#">Tienda</a></li>
            <li><a href="#">Cuenta</a></li>
            <li><a href="#">Men√∫</a></li>
            
        </ul>
    </nav>
    <!-- para la animacion de hover entre diferentes modelos -->
    <div id="menu-back" class={`absolute bg-black/5 backdrop-blur-lg rounded 
    left-[var(--left)] top-[var(--top)]
    w-[var(--width)] h-[var(--height)]
    transition-all duration-300
    
    ease-in-out opacity-0 -z-10
    
    
    `}/>
</header>





 <!-- para la animacion de hover entre diferentes modelos -->

 
<script>import { isRenderTemplateResult } from "astro/dist/runtime/server/render/astro"

    const listItem = document.querySelectorAll("#landing-header li")
    const menuBack = document.querySelector("#menu-back") as HTMLElement

    listItem.forEach((item) => {
        item.addEventListener("mouseenter", ({ target }) => {
            const {left, top, width, height } = item.getBoundingClientRect()
            const {clientHeight, clientWidth} = item

            console.log({left, top, width, height})
            console.log({clientHeight, clientWidth})

            menuBack.style.setProperty("--left", `${left}px`)
            menuBack.style.setProperty("--top", `${top}px`)
            menuBack.style.setProperty("--width", `${width}px`)
            menuBack.style.setProperty("--height", `${height}px`)
            menuBack.style.opacity = "1"
            menuBack.style.visibility = "visible"
        })

        item.addEventListener("mouseLeave", () =>{
            menuBack.style.opacity = "0"
            menuBack.style.visibility = "hidden"

        })
    })
    

</script>

<script>

    const $header =  document.querySelector('#landing-header') as HTMLElement
    const observerOption = {
        root: null,
        rootMargin: '0px',
        threshold: 0.9,
    }

    const observer = new IntersectionObserver((entries) =>{
        entries.forEach((entry) =>{
            const {isIntersecting} = entry
            if(isIntersecting){

                const color = entry.target.getAttribute('data-header-color')
                $header.style.color = color 
                
            }
        });
    }, observerOption)


    const $sections = document.querySelectorAll('.landing-section')
    $sections.forEach((section) => observer.observe(section))
 

</script>